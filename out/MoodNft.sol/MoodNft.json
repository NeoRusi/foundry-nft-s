{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "happySvgImageUri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "sadSvgImageUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MoodNft__CantFlipMoodIfNotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "flipMood",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001a3c38038062001a3c833981016040819052620000349162000182565b60405180604001604052806007815260200166135bdbd913999d60ca1b8152506040518060400160405280600281526020016126a760f11b81525081600090816200008091906200027b565b5060016200008f82826200027b565b50506000600655506007620000a582826200027b565b506008620000b483826200027b565b50505062000347565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e557600080fd5b81516001600160401b0380821115620001025762000102620000bd565b604051601f8301601f19908116603f011681019082821181831017156200012d576200012d620000bd565b816040528381526020925086838588010111156200014a57600080fd5b600091505b838210156200016e57858201830151818301840152908201906200014f565b600093810190920192909252949350505050565b600080604083850312156200019657600080fd5b82516001600160401b0380821115620001ae57600080fd5b620001bc86838701620000d3565b93506020850151915080821115620001d357600080fd5b50620001e285828601620000d3565b9150509250929050565b600181811c908216806200020157607f821691505b6020821081036200022257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027657600081815260208120601f850160051c81016020861015620002515750805b601f850160051c820191505b8181101562000272578281556001016200025d565b5050505b505050565b81516001600160401b03811115620002975762000297620000bd565b620002af81620002a88454620001ec565b8462000228565b602080601f831160018114620002e75760008415620002ce5750858301515b600019600386901b1c1916600185901b17855562000272565b600085815260208120601f198616915b828110156200031857888601518255948401946001909101908401620002f7565b5085821015620003375787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116e580620003576000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c1a147a011610066578063c1a147a0146101ff578063c2229fea14610212578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611085565b610240565b60405190151581526020015b60405180910390f35b61012a610292565b60405161011991906110f9565b61014a61014536600461110c565b610324565b6040516001600160a01b039091168152602001610119565b610175610170366004611141565b61034b565b005b61017561018536600461116b565b610465565b61017561019836600461116b565b610496565b61014a6101ab36600461110c565b6104b1565b6101c36101be3660046111a7565b610511565b604051908152602001610119565b61012a610597565b6101756101e73660046111c2565b6105a6565b6101756101fa366004611214565b6105b5565b61017561020d36600461110c565b6105ed565b610175610671565b61012a61022836600461110c565b6106ab565b61010d61023b3660046112f0565b610884565b60006001600160e01b031982166380ac58cd60e01b148061027157506001600160e01b03198216635b5e139f60e01b145b8061028c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a190611323565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90611323565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b600061032f826108b2565b506000908152600460205260409020546001600160a01b031690565b6000610356826104b1565b9050806001600160a01b0316836001600160a01b0316036103c85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e457506103e48133610884565b6104565760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103bf565b6104608383610911565b505050565b61046f338261097f565b61048b5760405162461bcd60e51b81526004016103bf9061135d565b6104608383836109de565b610460838383604051806020016040528060008152506105b5565b6000818152600260205260408120546001600160a01b03168061028c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b60006001600160a01b03821661057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103bf565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a190611323565b6105b1338383610b42565b5050565b6105bf338361097f565b6105db5760405162461bcd60e51b81526004016103bf9061135d565b6105e784848484610c10565b50505050565b6105f7338261097f565b610614576040516385046ca760e01b815260040160405180910390fd5b60008181526009602052604081205460ff166001811115610637576106376113aa565b03610657576000908152600960205260409020805460ff19166001179055565b6000818152600960205260409020805460ff191690555b50565b61067d33600654610c43565b600680546000908152600960205260408120805460ff19169055815491906106a4836113d6565b9190505550565b6060806000808481526009602052604090205460ff1660018111156106d2576106d26113aa565b0361076957600880546106e490611323565b80601f016020809104026020016040519081016040528092919081815260200182805461071090611323565b801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b505050505090506107f7565b6007805461077690611323565b80601f01602080910402602001604051908101604052809291908181526020018280546107a290611323565b80156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b505050505090505b60408051808201909152601e81527f646174613a6170706c69636174696f6e2f6a736f6e3b206261736536342c0000602082015261085c610836610292565b836040516020016108489291906113ef565b604051602081830303815290604052610c5d565b60405160200161086d929190611503565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661066e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610946826104b1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061098b836104b1565b9050806001600160a01b0316846001600160a01b031614806109b257506109b28185610884565b806109d65750836001600160a01b03166109cb84610324565b6001600160a01b0316145b949350505050565b826001600160a01b03166109f1826104b1565b6001600160a01b031614610a175760405162461bcd60e51b81526004016103bf90611532565b6001600160a01b038216610a795760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103bf565b826001600160a01b0316610a8c826104b1565b6001600160a01b031614610ab25760405162461bcd60e51b81526004016103bf90611532565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610ba35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103bf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c1b8484846109de565b610c2784848484610db0565b6105e75760405162461bcd60e51b81526004016103bf90611577565b6105b1828260405180602001604052806000815250610eb1565b60608151600003610c7c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016116706040913990506000600384516002610cab91906115c9565b610cb591906115dc565b610cc09060046115fe565b67ffffffffffffffff811115610cd857610cd86111fe565b6040519080825280601f01601f191660200182016040528015610d02576020820181803683370190505b509050600182016020820185865187015b80821015610d6e576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610d13565b5050600386510660018114610d8a5760028114610d9d57610da5565b603d6001830353603d6002830353610da5565b603d60018303535b509195945050505050565b60006001600160a01b0384163b15610ea657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610df4903390899088908890600401611615565b6020604051808303816000875af1925050508015610e2f575060408051601f3d908101601f19168201909252610e2c91810190611652565b60015b610e8c573d808015610e5d576040519150601f19603f3d011682016040523d82523d6000602084013e610e62565b606091505b508051600003610e845760405162461bcd60e51b81526004016103bf90611577565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109d6565b506001949350505050565b610ebb8383610ee4565b610ec86000848484610db0565b6104605760405162461bcd60e51b81526004016103bf90611577565b6001600160a01b038216610f3a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103bf565b6000818152600260205260409020546001600160a01b031615610f9f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6000818152600260205260409020546001600160a01b0316156110045760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461066e57600080fd5b60006020828403121561109757600080fd5b81356110a28161106f565b9392505050565b60005b838110156110c45781810151838201526020016110ac565b50506000910152565b600081518084526110e58160208601602086016110a9565b601f01601f19169290920160200192915050565b6020815260006110a260208301846110cd565b60006020828403121561111e57600080fd5b5035919050565b80356001600160a01b038116811461113c57600080fd5b919050565b6000806040838503121561115457600080fd5b61115d83611125565b946020939093013593505050565b60008060006060848603121561118057600080fd5b61118984611125565b925061119760208501611125565b9150604084013590509250925092565b6000602082840312156111b957600080fd5b6110a282611125565b600080604083850312156111d557600080fd5b6111de83611125565b9150602083013580151581146111f357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561122a57600080fd5b61123385611125565b935061124160208601611125565b925060408501359150606085013567ffffffffffffffff8082111561126557600080fd5b818701915087601f83011261127957600080fd5b81358181111561128b5761128b6111fe565b604051601f8201601f19908116603f011681019083821181831017156112b3576112b36111fe565b816040528281528a60208487010111156112cc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561130357600080fd5b61130c83611125565b915061131a60208401611125565b90509250929050565b600181811c9082168061133757607f821691505b60208210810361135757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113e8576113e86113c0565b5060010190565b683d913730b6b2911d1160b91b815282516000906114148160098501602088016110a9565b7f222c20226465736372697074696f6e223a22416e204e465420746861742072656009918401918201527f666c6563747320746865206d6f6f64206f6620746865206f776e65722c20313060298201526e018129037b71021b430b4b71091161608d1b60498201527f2261747472696275746573223a205b7b2274726169745f74797065223a20226d60588201527f6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616760788201526332911d1160e11b609882015283516114e881609c8401602088016110a9565b61227d60f01b609c9290910191820152609e01949350505050565b600083516115158184602088016110a9565b8351908301906115298183602088016110a9565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561028c5761028c6113c0565b6000826115f957634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761028c5761028c6113c0565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611648908301846110cd565b9695505050505050565b60006020828403121561166457600080fd5b81516110a28161106f56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122070b2354b960c26c795c584e9082bd9684fc0c766923ce83aa6ead18de37cdfbc64736f6c63430008130033",
    "sourceMap": "195:2149:32:-:0;;;505:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:19;;;;;;;;;;;;;-1:-1:-1;;;1390:113:19;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:19;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:19;:17;1489:7;1479;:17;:::i;:::-;-1:-1:-1;;630:1:32::1;613:14;:18:::0;-1:-1:-1;641:16:32::1;:33;660:14:::0;641:16;:33:::1;:::i;:::-;-1:-1:-1::0;684:18:32::1;:37;705:16:::0;684:18;:37:::1;:::i;:::-;;505:223:::0;;195:2149;;14:127:35;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:35;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:35;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:35:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:35;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:35;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:35;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:35;;;3992:26;3943:89;-1:-1:-1;;2747:1:35;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:35;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:35;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:35;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:35:o;:::-;195:2149:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c1a147a011610066578063c1a147a0146101ff578063c2229fea14610212578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611085565b610240565b60405190151581526020015b60405180910390f35b61012a610292565b60405161011991906110f9565b61014a61014536600461110c565b610324565b6040516001600160a01b039091168152602001610119565b610175610170366004611141565b61034b565b005b61017561018536600461116b565b610465565b61017561019836600461116b565b610496565b61014a6101ab36600461110c565b6104b1565b6101c36101be3660046111a7565b610511565b604051908152602001610119565b61012a610597565b6101756101e73660046111c2565b6105a6565b6101756101fa366004611214565b6105b5565b61017561020d36600461110c565b6105ed565b610175610671565b61012a61022836600461110c565b6106ab565b61010d61023b3660046112f0565b610884565b60006001600160e01b031982166380ac58cd60e01b148061027157506001600160e01b03198216635b5e139f60e01b145b8061028c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a190611323565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90611323565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b600061032f826108b2565b506000908152600460205260409020546001600160a01b031690565b6000610356826104b1565b9050806001600160a01b0316836001600160a01b0316036103c85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e457506103e48133610884565b6104565760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103bf565b6104608383610911565b505050565b61046f338261097f565b61048b5760405162461bcd60e51b81526004016103bf9061135d565b6104608383836109de565b610460838383604051806020016040528060008152506105b5565b6000818152600260205260408120546001600160a01b03168061028c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b60006001600160a01b03821661057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103bf565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a190611323565b6105b1338383610b42565b5050565b6105bf338361097f565b6105db5760405162461bcd60e51b81526004016103bf9061135d565b6105e784848484610c10565b50505050565b6105f7338261097f565b610614576040516385046ca760e01b815260040160405180910390fd5b60008181526009602052604081205460ff166001811115610637576106376113aa565b03610657576000908152600960205260409020805460ff19166001179055565b6000818152600960205260409020805460ff191690555b50565b61067d33600654610c43565b600680546000908152600960205260408120805460ff19169055815491906106a4836113d6565b9190505550565b6060806000808481526009602052604090205460ff1660018111156106d2576106d26113aa565b0361076957600880546106e490611323565b80601f016020809104026020016040519081016040528092919081815260200182805461071090611323565b801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b505050505090506107f7565b6007805461077690611323565b80601f01602080910402602001604051908101604052809291908181526020018280546107a290611323565b80156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b505050505090505b60408051808201909152601e81527f646174613a6170706c69636174696f6e2f6a736f6e3b206261736536342c0000602082015261085c610836610292565b836040516020016108489291906113ef565b604051602081830303815290604052610c5d565b60405160200161086d929190611503565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661066e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610946826104b1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061098b836104b1565b9050806001600160a01b0316846001600160a01b031614806109b257506109b28185610884565b806109d65750836001600160a01b03166109cb84610324565b6001600160a01b0316145b949350505050565b826001600160a01b03166109f1826104b1565b6001600160a01b031614610a175760405162461bcd60e51b81526004016103bf90611532565b6001600160a01b038216610a795760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103bf565b826001600160a01b0316610a8c826104b1565b6001600160a01b031614610ab25760405162461bcd60e51b81526004016103bf90611532565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610ba35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103bf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c1b8484846109de565b610c2784848484610db0565b6105e75760405162461bcd60e51b81526004016103bf90611577565b6105b1828260405180602001604052806000815250610eb1565b60608151600003610c7c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016116706040913990506000600384516002610cab91906115c9565b610cb591906115dc565b610cc09060046115fe565b67ffffffffffffffff811115610cd857610cd86111fe565b6040519080825280601f01601f191660200182016040528015610d02576020820181803683370190505b509050600182016020820185865187015b80821015610d6e576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610d13565b5050600386510660018114610d8a5760028114610d9d57610da5565b603d6001830353603d6002830353610da5565b603d60018303535b509195945050505050565b60006001600160a01b0384163b15610ea657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610df4903390899088908890600401611615565b6020604051808303816000875af1925050508015610e2f575060408051601f3d908101601f19168201909252610e2c91810190611652565b60015b610e8c573d808015610e5d576040519150601f19603f3d011682016040523d82523d6000602084013e610e62565b606091505b508051600003610e845760405162461bcd60e51b81526004016103bf90611577565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109d6565b506001949350505050565b610ebb8383610ee4565b610ec86000848484610db0565b6104605760405162461bcd60e51b81526004016103bf90611577565b6001600160a01b038216610f3a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103bf565b6000818152600260205260409020546001600160a01b031615610f9f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6000818152600260205260409020546001600160a01b0316156110045760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461066e57600080fd5b60006020828403121561109757600080fd5b81356110a28161106f565b9392505050565b60005b838110156110c45781810151838201526020016110ac565b50506000910152565b600081518084526110e58160208601602086016110a9565b601f01601f19169290920160200192915050565b6020815260006110a260208301846110cd565b60006020828403121561111e57600080fd5b5035919050565b80356001600160a01b038116811461113c57600080fd5b919050565b6000806040838503121561115457600080fd5b61115d83611125565b946020939093013593505050565b60008060006060848603121561118057600080fd5b61118984611125565b925061119760208501611125565b9150604084013590509250925092565b6000602082840312156111b957600080fd5b6110a282611125565b600080604083850312156111d557600080fd5b6111de83611125565b9150602083013580151581146111f357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561122a57600080fd5b61123385611125565b935061124160208601611125565b925060408501359150606085013567ffffffffffffffff8082111561126557600080fd5b818701915087601f83011261127957600080fd5b81358181111561128b5761128b6111fe565b604051601f8201601f19908116603f011681019083821181831017156112b3576112b36111fe565b816040528281528a60208487010111156112cc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561130357600080fd5b61130c83611125565b915061131a60208401611125565b90509250929050565b600181811c9082168061133757607f821691505b60208210810361135757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113e8576113e86113c0565b5060010190565b683d913730b6b2911d1160b91b815282516000906114148160098501602088016110a9565b7f222c20226465736372697074696f6e223a22416e204e465420746861742072656009918401918201527f666c6563747320746865206d6f6f64206f6620746865206f776e65722c20313060298201526e018129037b71021b430b4b71091161608d1b60498201527f2261747472696275746573223a205b7b2274726169745f74797065223a20226d60588201527f6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616760788201526332911d1160e11b609882015283516114e881609c8401602088016110a9565b61227d60f01b609c9290910191820152609e01949350505050565b600083516115158184602088016110a9565b8351908301906115298183602088016110a9565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561028c5761028c6113c0565b6000826115f957634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761028c5761028c6113c0565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611648908301846110cd565b9695505050505050565b60006020828403121561166457600080fd5b81516110a28161106f56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122070b2354b960c26c795c584e9082bd9684fc0c766923ce83aa6ead18de37cdfbc64736f6c63430008130033",
    "sourceMap": "195:2149:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:19;;;;;;:::i;:::-;;:::i;:::-;;;565:14:35;;558:22;540:41;;528:2;513:18;1570:300:19;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:35;;;1679:51;;1667:2;1652:18;3935:167:19;1533:203:35;3468:406:19;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:35;;;2836:2;2821:18;1929:204:19;2702:177:35;2633:102:19;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;900:350:32:-;;;;;;:::i;:::-;;:::i;734:160::-;;;:::i;1385:957::-;;;;;;:::i;:::-;;:::i;4388:162:19:-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:19;;-1:-1:-1;;;1707:40:19;;:104;;-1:-1:-1;;;;;;;1763:48:19;;-1:-1:-1;;;1763:48:19;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:27;;;1827:36:19;1688:175;1570:300;-1:-1:-1;;1570:300:19:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:19;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:19;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:19;:2;-1:-1:-1;;;;;3605:11:19;;3597:57;;;;-1:-1:-1;;;3597:57:19;;5363:2:35;3597:57:19;;;5345:21:35;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:35;;;5485:31;5533:19;;3597:57:19;;;;;;;;;719:10:25;-1:-1:-1;;;;;3686:21:19;;;;:62;;-1:-1:-1;3711:37:19;3728:5;719:10:25;4388:162:19;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:19;;5765:2:35;3665:170:19;;;5747:21:35;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:19;5563:425:35;3665:170:19;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:25;4804:7:19;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:19;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:19;;2324:56;;;;-1:-1:-1;;;2324:56:19;;6609:2:35;2324:56:19;;;6591:21:35;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:35;;;6660:54;6731:18;;2324:56:19;6407:348:35;1929:204:19;2001:7;-1:-1:-1;;;;;2028:19:19;;2020:73;;;;-1:-1:-1;;;2020:73:19;;6962:2:35;2020:73:19;;;6944:21:35;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:35;;;7084:39;7140:19;;2020:73:19;6760:405:35;2020:73:19;-1:-1:-1;;;;;;2110:16:19;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:25;4296:8:19;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:25;5352:7:19;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:19;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;900:350:32:-;957:39;976:10;988:7;957:18;:39::i;:::-;952:111;;1019:33;;-1:-1:-1;;;1019:33:32;;;;;;;;;;;952:111;1104:10;1076:24;;;:15;:24;;;;;;;;;:38;;;;;;;:::i;:::-;;1072:172;;1130:24;;;;:15;:24;;;;;:35;;-1:-1:-1;;1130:35:32;1157:8;1130:35;;;900:350::o;1072:172::-;1223:10;1196:24;;;:15;:24;;;;;:37;;-1:-1:-1;;1196:37:32;;;1072:172;900:350;:::o;734:160::-;770:37;780:10;792:14;;770:9;:37::i;:::-;833:14;;;851:10;817:31;;;:15;:31;;;;;:44;;-1:-1:-1;;817:44:32;;;871:16;;;833:14;871:16;;;:::i;:::-;;;;;;734:160::o;1385:957::-;1458:13;;1547:10;1519:24;;;;:15;:24;;;;;;;;;:38;;;;;;;:::i;:::-;;1515:156;;1584:18;1573:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1515:156;;;1644:16;1633:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1515:156;1333:39;;;;;;;;;;;;;;;;;1769:542;1922:6;:4;:6::i;:::-;2203:8;1835:436;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1769:13;:542::i;:::-;1707:618;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1680:655;;;1385:957;;;:::o;4388:162:19:-;-1:-1:-1;;;;;4508:25:19;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:19;13313:53;;;;-1:-1:-1;;;13313:53:19;;6609:2:35;13313:53:19;;;6591:21:35;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:35;;;6660:54;6731:18;;13313:53:19;6407:348:35;12572:171:19;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:19;-1:-1:-1;;;;;12646:29:19;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:19;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:19;:7;-1:-1:-1;;;;;7570:16:19;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:19;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:19;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:19:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:19;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:19;;11346:81;;;;-1:-1:-1;;;11346:81:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:19;;11437:65;;;;-1:-1:-1;;;11437:65:19;;10200:2:35;11437:65:19;;;10182:21:35;10239:2;10219:18;;;10212:30;10278:34;10258:18;;;10251:62;-1:-1:-1;;;10329:18:35;;;10322:34;10373:19;;11437:65:19;9998:400:35;11437:65:19;11682:4;-1:-1:-1;;;;;11655:31:19;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:19;;11647:81;;;;-1:-1:-1;;;11647:81:19;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:19;;;;;;-1:-1:-1;;;;;12265:15:19;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:19;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:19;:5;-1:-1:-1;;;;;12990:17:19;;12982:55;;;;-1:-1:-1;;;12982:55:19;;10605:2:35;12982:55:19;;;10587:21:35;10644:2;10624:18;;;10617:30;10683:27;10663:18;;;10656:55;10728:18;;12982:55:19;10403:349:35;12982:55:19;-1:-1:-1;;;;;13047:25:19;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:19;;;;;;;;;;13108:41;;540::35;;;13108::19;;513:18:35;13108:41:19;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:19;;;;;;;:::i;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;505:3026:24:-;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:24;;;;;;;;;-1:-1:-1;813:9:24;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:24;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:24;;505:3026;-1:-1:-1;;;;;505:3026:24:o;13925:831:19:-;14074:4;-1:-1:-1;;;;;14094:13:19;;1702:19:23;:23;14090:660:19;;14129:71;;-1:-1:-1;;;14129:71:19;;-1:-1:-1;;;;;14129:36:19;;;;;:71;;719:10:25;;14180:4:19;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:19;;;;;;;;-1:-1:-1;;14129:71:19;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:19;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:19;-1:-1:-1;;;14250:51:19;;-1:-1:-1;14243:58:19;;14090:660;-1:-1:-1;14735:4:19;13925:831;;;;;;:::o;8324:279::-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;-1:-1:-1;;;8446:150:19;;;;;;;:::i;8925:920::-;-1:-1:-1;;;;;9004:16:19;;8996:61;;;;-1:-1:-1;;;8996:61:19;;12651:2:35;8996:61:19;;;12633:21:35;;;12670:18;;;12663:30;12729:34;12709:18;;;12702:62;12781:18;;8996:61:19;12449:356:35;8996:61:19;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:19;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:19;;13012:2:35;9067:58:19;;;12994:21:35;13051:2;13031:18;;;13024:30;13090;13070:18;;;13063:58;13138:18;;9067:58:19;12810:352:35;9067:58:19;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:19;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:19;;13012:2:35;9271:58:19;;;12994:21:35;13051:2;13031:18;;;13024:30;13090;13070:18;;;13063:58;13138:18;;9271:58:19;12810:352:35;9271:58:19;-1:-1:-1;;;;;9671:13:19;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:19;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;14:131:35:-;-1:-1:-1;;;;;;88:32:35;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:35:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:35;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:35;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:35:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:35;;1348:180;-1:-1:-1;1348:180:35:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:35;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:35:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:35;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:35;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:127::-;7231:10;7226:3;7222:20;7219:1;7212:31;7262:4;7259:1;7252:15;7286:4;7283:1;7276:15;7302:127;7363:10;7358:3;7354:20;7351:1;7344:31;7394:4;7391:1;7384:15;7418:4;7415:1;7408:15;7434:135;7473:3;7494:17;;;7491:43;;7514:18;;:::i;:::-;-1:-1:-1;7561:1:35;7550:13;;7434:135::o;7574:1512::-;-1:-1:-1;;;8175:43:35;;8241:13;;8157:3;;8263:74;8241:13;8326:1;8317:11;;8310:4;8298:17;;8263:74;:::i;:::-;8400:66;8396:1;8356:16;;;8388:10;;;8381:86;8496:34;8491:2;8483:11;;8476:55;-1:-1:-1;;;8555:2:35;8547:11;;8540:63;8632:66;8627:2;8619:11;;8612:87;8729:66;8723:3;8715:12;;8708:88;-1:-1:-1;;;8820:3:35;8812:12;;8805:42;8872:13;;8894:77;8872:13;8956:3;8948:12;;8941:4;8929:17;;8894:77;:::i;:::-;-1:-1:-1;;;9031:3:35;8990:17;;;;9023:12;;;9016:36;9076:3;9068:12;;7574:1512;-1:-1:-1;;;;7574:1512:35:o;9091:496::-;9270:3;9308:6;9302:13;9324:66;9383:6;9378:3;9371:4;9363:6;9359:17;9324:66;:::i;:::-;9453:13;;9412:16;;;;9475:70;9453:13;9412:16;9522:4;9510:17;;9475:70;:::i;:::-;9561:20;;9091:496;-1:-1:-1;;;;9091:496:35:o;9592:401::-;9794:2;9776:21;;;9833:2;9813:18;;;9806:30;9872:34;9867:2;9852:18;;9845:62;-1:-1:-1;;;9938:2:35;9923:18;;9916:35;9983:3;9968:19;;9592:401::o;10757:414::-;10959:2;10941:21;;;10998:2;10978:18;;;10971:30;11037:34;11032:2;11017:18;;11010:62;-1:-1:-1;;;11103:2:35;11088:18;;11081:48;11161:3;11146:19;;10757:414::o;11176:125::-;11241:9;;;11262:10;;;11259:36;;;11275:18;;:::i;11306:217::-;11346:1;11372;11362:132;;11416:10;11411:3;11407:20;11404:1;11397:31;11451:4;11448:1;11441:15;11479:4;11476:1;11469:15;11362:132;-1:-1:-1;11508:9:35;;11306:217::o;11528:168::-;11601:9;;;11632;;11649:15;;;11643:22;;11629:37;11619:71;;11670:18;;:::i;11701:489::-;-1:-1:-1;;;;;11970:15:35;;;11952:34;;12022:15;;12017:2;12002:18;;11995:43;12069:2;12054:18;;12047:34;;;12117:3;12112:2;12097:18;;12090:31;;;11895:4;;12138:46;;12164:19;;12156:6;12138:46;:::i;:::-;12130:54;11701:489;-1:-1:-1;;;;;;11701:489:35:o;12195:249::-;12264:6;12317:2;12305:9;12296:7;12292:23;12288:32;12285:52;;;12333:1;12330;12323:12;12285:52;12365:9;12359:16;12384:30;12408:5;12384:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "flipMood(uint256)": "c1a147a0",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintNft()": "c2229fea",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"happySvgImageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sadSvgImageUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MoodNft__CantFlipMoodIfNotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"flipMood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MoodNft.sol\":\"MoodNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/MoodNft.sol\":{\"keccak256\":\"0xa71692f7a29ab437a993f60ca4fc604dada931727ed92c0ce2c3e35071bc1164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfcce0e67dab0d1c79538029dc4d874e25b8f1c33e12ee0ae5b89d7c5c290afe\",\"dweb:/ipfs/QmaaizZymhnFhVFiLhPGmB7Vbbje8bJv4Z9P5Aaqu1iciN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "happySvgImageUri",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sadSvgImageUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoodNft__CantFlipMoodIfNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flipMood"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "foundry-devops/=lib/foundry-devops/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MoodNft.sol": "MoodNft"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/MoodNft.sol": {
        "keccak256": "0xa71692f7a29ab437a993f60ca4fc604dada931727ed92c0ce2c3e35071bc1164",
        "urls": [
          "bzz-raw://bfcce0e67dab0d1c79538029dc4d874e25b8f1c33e12ee0ae5b89d7c5c290afe",
          "dweb:/ipfs/QmaaizZymhnFhVFiLhPGmB7Vbbje8bJv4Z9P5Aaqu1iciN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MoodNft.sol",
    "id": 46309,
    "exportedSymbols": {
      "Base64": [
        44823
      ],
      "ERC721": [
        44285
      ],
      "MoodNft": [
        46308
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:2314:32",
    "nodes": [
      {
        "id": 46138,
        "nodeType": "PragmaDirective",
        "src": "31:24:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 46140,
        "nodeType": "ImportDirective",
        "src": "57:71:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46309,
        "sourceUnit": 44286,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46139,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44285,
              "src": "65:6:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46142,
        "nodeType": "ImportDirective",
        "src": "129:64:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46309,
        "sourceUnit": 44824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46141,
              "name": "Base64",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44823,
              "src": "137:6:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46308,
        "nodeType": "ContractDefinition",
        "src": "195:2149:32",
        "nodes": [
          {
            "id": 46146,
            "nodeType": "ErrorDefinition",
            "src": "241:40:32",
            "nodes": [],
            "errorSelector": "85046ca7",
            "name": "MoodNft__CantFlipMoodIfNotOwner",
            "nameLocation": "247:31:32",
            "parameters": {
              "id": 46145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:32"
            }
          },
          {
            "id": 46148,
            "nodeType": "VariableDeclaration",
            "src": "287:30:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenCounter",
            "nameLocation": "303:14:32",
            "scope": 46308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46150,
            "nodeType": "VariableDeclaration",
            "src": "323:31:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_sadSvgImageUri",
            "nameLocation": "338:16:32",
            "scope": 46308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 46149,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "323:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46152,
            "nodeType": "VariableDeclaration",
            "src": "360:33:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_happySvgImageUri",
            "nameLocation": "375:18:32",
            "scope": 46308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 46151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "360:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46155,
            "nodeType": "EnumDefinition",
            "src": "400:44:32",
            "nodes": [],
            "canonicalName": "MoodNft.Mood",
            "members": [
              {
                "id": 46153,
                "name": "HAPPY",
                "nameLocation": "420:5:32",
                "nodeType": "EnumValue",
                "src": "420:5:32"
              },
              {
                "id": 46154,
                "name": "SAD",
                "nameLocation": "435:3:32",
                "nodeType": "EnumValue",
                "src": "435:3:32"
              }
            ],
            "name": "Mood",
            "nameLocation": "405:4:32"
          },
          {
            "id": 46160,
            "nodeType": "VariableDeclaration",
            "src": "450:48:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenIdToMood",
            "nameLocation": "483:15:32",
            "scope": 46308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
              "typeString": "mapping(uint256 => enum MoodNft.Mood)"
            },
            "typeName": {
              "id": 46159,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 46156,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "458:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "450:24:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 46158,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46157,
                  "name": "Mood",
                  "nameLocations": [
                    "469:4:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46155,
                  "src": "469:4:32"
                },
                "referencedDeclaration": 46155,
                "src": "469:4:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Mood_$46155",
                  "typeString": "enum MoodNft.Mood"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 46184,
            "nodeType": "FunctionDefinition",
            "src": "505:223:32",
            "nodes": [],
            "body": {
              "id": 46183,
              "nodeType": "Block",
              "src": "603:125:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46171,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46148,
                      "src": "613:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 46172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "630:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "613:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46174,
                  "nodeType": "ExpressionStatement",
                  "src": "613:18:32"
                },
                {
                  "expression": {
                    "id": 46177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46175,
                      "name": "s_sadSvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46150,
                      "src": "641:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46176,
                      "name": "sadSvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46164,
                      "src": "660:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "641:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 46178,
                  "nodeType": "ExpressionStatement",
                  "src": "641:33:32"
                },
                {
                  "expression": {
                    "id": 46181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46179,
                      "name": "s_happySvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46152,
                      "src": "684:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46180,
                      "name": "happySvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46162,
                      "src": "705:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "684:37:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 46182,
                  "nodeType": "ExpressionStatement",
                  "src": "684:37:32"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f6f644e6674",
                    "id": 46167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "586:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_727e134fca6e4c9407f2ccaa40ab97ba2d6d28b5a6f9b599e5eceb1031aabdf8",
                      "typeString": "literal_string \"MoodNft\""
                    },
                    "value": "MoodNft"
                  },
                  {
                    "hexValue": "4d4e",
                    "id": 46168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "597:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a58cf80943770dd084f078bec17346ccb44c1ca309c9db7e14b1781d30f61dc0",
                      "typeString": "literal_string \"MN\""
                    },
                    "value": "MN"
                  }
                ],
                "id": 46169,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46166,
                  "name": "ERC721",
                  "nameLocations": [
                    "579:6:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44285,
                  "src": "579:6:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "579:23:32"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46162,
                  "mutability": "mutable",
                  "name": "happySvgImageUri",
                  "nameLocation": "531:16:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 46184,
                  "src": "517:30:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46164,
                  "mutability": "mutable",
                  "name": "sadSvgImageUri",
                  "nameLocation": "563:14:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 46184,
                  "src": "549:28:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "516:62:32"
            },
            "returnParameters": {
              "id": 46170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:32"
            },
            "scope": 46308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46204,
            "nodeType": "FunctionDefinition",
            "src": "734:160:32",
            "nodes": [],
            "body": {
              "id": 46203,
              "nodeType": "Block",
              "src": "760:134:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "780:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "784:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "780:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46190,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46148,
                        "src": "792:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46187,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43853,
                        43882
                      ],
                      "referencedDeclaration": 43853,
                      "src": "770:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46192,
                  "nodeType": "ExpressionStatement",
                  "src": "770:37:32"
                },
                {
                  "expression": {
                    "id": 46198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46193,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46160,
                        "src": "817:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 46195,
                      "indexExpression": {
                        "id": 46194,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46148,
                        "src": "833:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "817:31:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 46196,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46155,
                        "src": "851:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$46155_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 46197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "856:5:32",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46153,
                      "src": "851:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "817:44:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Mood_$46155",
                      "typeString": "enum MoodNft.Mood"
                    }
                  },
                  "id": 46199,
                  "nodeType": "ExpressionStatement",
                  "src": "817:44:32"
                },
                {
                  "expression": {
                    "id": 46201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "871:16:32",
                    "subExpression": {
                      "id": 46200,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46148,
                      "src": "871:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46202,
                  "nodeType": "ExpressionStatement",
                  "src": "871:16:32"
                }
              ]
            },
            "functionSelector": "c2229fea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nameLocation": "743:7:32",
            "parameters": {
              "id": 46185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:32"
            },
            "returnParameters": {
              "id": 46186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:32"
            },
            "scope": 46308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46244,
            "nodeType": "FunctionDefinition",
            "src": "900:350:32",
            "nodes": [],
            "body": {
              "id": 46243,
              "nodeType": "Block",
              "src": "942:308:32",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 46214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "956:40:32",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 46210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "976:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "980:6:32",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "976:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46212,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46206,
                          "src": "988:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 46209,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43838,
                        "src": "957:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 46213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "957:39:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46219,
                  "nodeType": "IfStatement",
                  "src": "952:111:32",
                  "trueBody": {
                    "id": 46218,
                    "nodeType": "Block",
                    "src": "998:65:32",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 46215,
                            "name": "MoodNft__CantFlipMoodIfNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46146,
                            "src": "1019:31:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:33:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46217,
                        "nodeType": "RevertStatement",
                        "src": "1012:40:32"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Mood_$46155",
                      "typeString": "enum MoodNft.Mood"
                    },
                    "id": 46225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 46220,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46160,
                        "src": "1076:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 46222,
                      "indexExpression": {
                        "id": 46221,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46206,
                        "src": "1092:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1076:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 46223,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46155,
                        "src": "1104:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$46155_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 46224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1109:5:32",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46153,
                      "src": "1104:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "1076:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46241,
                    "nodeType": "Block",
                    "src": "1182:62:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 46239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 46234,
                              "name": "s_tokenIdToMood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46160,
                              "src": "1196:15:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                              }
                            },
                            "id": 46236,
                            "indexExpression": {
                              "id": 46235,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46206,
                              "src": "1212:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1196:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$46155",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 46237,
                              "name": "Mood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46155,
                              "src": "1223:4:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Mood_$46155_$",
                                "typeString": "type(enum MoodNft.Mood)"
                              }
                            },
                            "id": 46238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1228:5:32",
                            "memberName": "HAPPY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46153,
                            "src": "1223:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$46155",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "src": "1196:37:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Mood_$46155",
                            "typeString": "enum MoodNft.Mood"
                          }
                        },
                        "id": 46240,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:37:32"
                      }
                    ]
                  },
                  "id": 46242,
                  "nodeType": "IfStatement",
                  "src": "1072:172:32",
                  "trueBody": {
                    "id": 46233,
                    "nodeType": "Block",
                    "src": "1116:60:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 46231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 46226,
                              "name": "s_tokenIdToMood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46160,
                              "src": "1130:15:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                              }
                            },
                            "id": 46228,
                            "indexExpression": {
                              "id": 46227,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46206,
                              "src": "1146:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1130:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$46155",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 46229,
                              "name": "Mood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46155,
                              "src": "1157:4:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Mood_$46155_$",
                                "typeString": "type(enum MoodNft.Mood)"
                              }
                            },
                            "id": 46230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1162:3:32",
                            "memberName": "SAD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46154,
                            "src": "1157:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$46155",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "src": "1130:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Mood_$46155",
                            "typeString": "enum MoodNft.Mood"
                          }
                        },
                        "id": 46232,
                        "nodeType": "ExpressionStatement",
                        "src": "1130:35:32"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c1a147a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipMood",
            "nameLocation": "909:8:32",
            "parameters": {
              "id": 46207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46206,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "926:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 46244,
                  "src": "918:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "917:17:32"
            },
            "returnParameters": {
              "id": 46208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "942:0:32"
            },
            "scope": 46308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46253,
            "nodeType": "FunctionDefinition",
            "src": "1256:123:32",
            "nodes": [],
            "body": {
              "id": 46252,
              "nodeType": "Block",
              "src": "1323:56:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b206261736536342c",
                    "id": 46250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1340:32:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_994b97b325117c5d6f8167100fac15d1380982d20bee41659c8e00e959f07859",
                      "typeString": "literal_string \"data:application/json; base64,\""
                    },
                    "value": "data:application/json; base64,"
                  },
                  "functionReturnParameters": 46249,
                  "id": 46251,
                  "nodeType": "Return",
                  "src": "1333:39:32"
                }
              ]
            },
            "baseFunctions": [
              43572
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1265:8:32",
            "overrides": {
              "id": 46246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1290:8:32"
            },
            "parameters": {
              "id": 46245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:32"
            },
            "returnParameters": {
              "id": 46249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46253,
                  "src": "1308:13:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:15:32"
            },
            "scope": 46308,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46307,
            "nodeType": "FunctionDefinition",
            "src": "1385:957:32",
            "nodes": [],
            "body": {
              "id": 46306,
              "nodeType": "Block",
              "src": "1473:869:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46262,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "1497:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 46306,
                      "src": "1483:22:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 46261,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1483:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46263,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1483:22:32"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Mood_$46155",
                      "typeString": "enum MoodNft.Mood"
                    },
                    "id": 46269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 46264,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46160,
                        "src": "1519:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$46155_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 46266,
                      "indexExpression": {
                        "id": 46265,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46255,
                        "src": "1535:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1519:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 46267,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46155,
                        "src": "1547:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$46155_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 46268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1552:5:32",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46153,
                      "src": "1547:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$46155",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "1519:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 46279,
                    "nodeType": "Block",
                    "src": "1619:52:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 46277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 46275,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46262,
                            "src": "1633:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 46276,
                            "name": "s_sadSvgImageUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46150,
                            "src": "1644:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1633:27:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 46278,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:27:32"
                      }
                    ]
                  },
                  "id": 46280,
                  "nodeType": "IfStatement",
                  "src": "1515:156:32",
                  "trueBody": {
                    "id": 46274,
                    "nodeType": "Block",
                    "src": "1559:54:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 46272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 46270,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46262,
                            "src": "1573:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 46271,
                            "name": "s_happySvgImageUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46152,
                            "src": "1584:18:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1573:29:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 46273,
                        "nodeType": "ExpressionStatement",
                        "src": "1573:29:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 46285,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46253
                              ],
                              "referencedDeclaration": 46253,
                              "src": "1741:8:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 46286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1741:10:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "7b226e616d65223a22",
                                        "id": 46293,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1881:11:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        "value": "{\"name\":\""
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 46294,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 43514,
                                          "src": "1922:4:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                            "typeString": "function () view returns (string memory)"
                                          }
                                        },
                                        "id": 46295,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1922:6:32",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "222c20226465736372697074696f6e223a22416e204e46542074686174207265666c6563747320746865206d6f6f64206f6620746865206f776e65722c2031303025206f6e20436861696e21222c20",
                                        "id": 46296,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1992:81:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        "value": "\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", "
                                      },
                                      {
                                        "hexValue": "2261747472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616765223a22",
                                        "id": 46297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2103:70:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        "value": "\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\""
                                      },
                                      {
                                        "id": 46298,
                                        "name": "imageURI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46262,
                                        "src": "2203:8:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "227d",
                                        "id": 46299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2241:4:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        },
                                        "value": "\"}"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        }
                                      ],
                                      "expression": {
                                        "id": 46291,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1835:3:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 46292,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1839:12:32",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1835:16:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 46300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1835:436:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 46290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1804:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 46289,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1804:5:32",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 46301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1804:489:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 46287,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44823,
                                "src": "1769:6:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$44823_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 46288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1776:6:32",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44822,
                              "src": "1769:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 46302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1769:542:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 46283,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1707:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1711:12:32",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1707:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 46303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:618:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1687:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 46281,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1687:6:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:648:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 46260,
                  "id": 46305,
                  "nodeType": "Return",
                  "src": "1680:655:32"
                }
              ]
            },
            "baseFunctions": [
              43563
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1394:8:32",
            "overrides": {
              "id": 46257,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1440:8:32"
            },
            "parameters": {
              "id": 46256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46255,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1411:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 46307,
                  "src": "1403:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:17:32"
            },
            "returnParameters": {
              "id": 46260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46307,
                  "src": "1458:13:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:15:32"
            },
            "scope": 46308,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46143,
              "name": "ERC721",
              "nameLocations": [
                "215:6:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44285,
              "src": "215:6:32"
            },
            "id": 46144,
            "nodeType": "InheritanceSpecifier",
            "src": "215:6:32"
          }
        ],
        "canonicalName": "MoodNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46308,
          44285,
          44446,
          44401,
          45098,
          45110,
          44845
        ],
        "name": "MoodNft",
        "nameLocation": "204:7:32",
        "scope": 46309,
        "usedErrors": [
          46146
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 32
}